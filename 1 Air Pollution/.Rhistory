?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
lenth(my_seq)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times= 10)
rep(c(0, 1, 2), each=10)
c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- paste(c(my_char, "Cromwell"), collapse = " ")
my_name <- c(my_char, "Cromwell")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep= " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x
x
bye()
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrows = 4, ncols = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
View(my_data)
View(flags)
bye()
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors, n=6)
head(flag_colors, num=6)
info()
?head
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
<- 10
f(3)
z <- 10
f(3)
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
z
g
setwd("D:/Google Drive/3 Work Stuff/4 Trainings/COURSERA/R Programming/Programming Assignment 1 - Air Pollution")
help(read.csv)
read.csv("specdata/1.csv")
read.csv("specdata/001.csv")
sprintf("%3d", 1)
sprintf("%03d", 1)
sprintf("%03d", 1) + ".csv"
paste(c(sprintf("%03d", 1), ".csv"), sep=".")
paste(c(sprintf("%03d", 1), ".csv"), collapse=".")
paste(c(sprintf("%03d", 1), "csv"), collapse=".")
help(mean)
test <- read.csv("specdata/001.csv")
head(test)
names(test)
test[test$ID != 1]
test[test$ID == 1]
test[test$ID == 1,]
test[test$ID != 1,]
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
printf("%02d", monitor)
}
}
pollutantmean()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
sprintf("%02d", monitor)
}
}
pollutantmean()
pollutantmean(id=1:10)
foreach (monitor in id) {
sprintf("%02d", monitor)
}
id=1:10
for (monitor in id) {
sprintf("%02d", monitor)
}
id <- 1:10
for (monitor in id) {
sprintf("%02d", monitor)
}
for (monitor in id) {
print(monitor)
}
for (monitor in id) {
sprint(monitor)
}
for (monitor in id) {
sprintf(monitor)
}
sprintf("%02d", 1)
for (monitor in id) {
sprintf("%03d", monitor)
}
id
for (monitor in id) {
sprintf("%03d", monitor)
}
for (monitor in id) {
print(monitor)
}
for (monitor in id) {
test <- sprintf("%03d", monitor)
}
for (monitor in id) {
test <- sprintf("%03d", monitor)
print (test)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
fileToRead <- paste(sprintf("%03d", monitor), "csv",
collapse=".")
print(fileToRead)
}
}
pollutantmean
pollutantmean()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
fileToRead <- paste(sprintf("%03d", monitor), "csv",
sep=".")
print(fileToRead)
}
}
pollutantmean()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
monitorFile <- paste(sprintf("%03d", monitor), "csv",
sep=".")
monitorPath <- paste(directory, monitor, Filesep="\")
print(monitorPath)
}
}
dir <- 'D:\Google Drive\3 Work Stuff\4 Trainings\COURSERA\R Programming\Programming Assignment 1 - Air Pollution\specdata'
dir <- "D:\Google Drive\3 Work Stuff\4 Trainings\COURSERA\R Programming\Programming Assignment 1 - Air Pollution\specdata"
dir <- "specdata"
pollutantmean(dir)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
monitorFile <- paste(sprintf("%03d", monitor), "csv",
sep=".")
monitorPath <- paste(directory, monitor, Filesep="\")
print(monitorPath)
}
}
pollutantmean(dir)
}
}}
pollutantmean
pollutantmean(dir)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
monitorFile <- paste(sprintf("%03d", monitor), "csv",
sep=".")
monitorPath <- paste(directory, monitor, Filesep="\")
print(monitorPath)
}
}
""
""
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
monitorFile <- paste(sprintf("%03d", monitor), "csv",
sep=".")
monitorPath <- paste(directory, monitor, Filesep="\\")
print(monitorPath)
}
}
pollutantmean(dir)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
monitorFile <- paste(sprintf("%03d", monitor), "csv",
sep=".")
monitorPath <- paste(directory, monitorFile, sep="\\")
print(monitorPath)
}
}
pollutantmean(dir)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
monitorFile <- paste(sprintf("%03d", monitor), "csv",
sep=".")
monitorPath <- paste(directory, monitorFile, sep="\")
print(monitorPath)
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor in id) {
monitorFile <- paste(sprintf("%03d", monitor), "csv",
sep=".")
monitorPath <- paste(directory, monitorFile, sep="/")
print(monitorPath)
}
}
pollutantmean(dir)
test <- read.csv("specdata/332.csv")
test
pollutant <- "sulfate"
test[pollutant]
test[pollutant & !is.na(test[pollutant])]
test[!is.na(test[pollutant])]
test
test[!is.na(test[pollutant]), ]
test2 <- test[!is.na(test[pollutant]), ]
test2$pollutant
test2[pollutant]
length(test2[pollutant])
size(test2[pollutant])
test2[pollutant]
length(test2[pollutant])
test2[[pollutant]]
length(test2[[pollutant]])
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
runningTotal <- 0
runningCount <- 0
for (monitor in id) {
monitorFile <- paste(sprintf("%03d", monitor), "csv",
sep=".")
monitorPath <- paste(directory, monitorFile, sep="/")
currentData <- read.csv(monitorPath)
filteredData <- currentData[!is.na(currentData[pollutant]), ]
pollutantColumn <- filteredData[[pollutant]]
runningTotal <- runningTotal + sum(pollutantColumn)
runningCount <- runningCount + length(pollutantColumn)
}
runningTotal / runningCount
}
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
help(mean)
x <- c(0:10, 50)
xm <- mean(x)
c(xm, mean(x, trim = 0.10))
x <- c(0:10, 50)
xm <- mean(x)
c(xm, mean(x, trim = 0.1000))
x <- c(0:10, 50)
xm <- mean(x)
c(xm, mean(x, trim = 0.00001))
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
help(round)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
